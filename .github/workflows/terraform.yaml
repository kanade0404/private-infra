name: 'Terraform'

on:
  pull_request:
  push:
    branches:
      - feature/*
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS_PROD }}

jobs:
  terraform:
    runs-on: ubuntu-20.04

    defaults:
      run:
        shell: bash

    permissions:
      id-token: 'write'
      contents: 'read'
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate to GoogleCloud
        id: 'google-cloud-auth'
        uses: 'google-github-actions/auth@v0.7.1'
        with:
          create_credentials_file: true
          workload_identity_provider: "/projects/${{ secrets.GOOGLE_PROJECT_ID_NUMBER }}/locations/global/workloadIdentityPools/gh-oidc-pool/providers/github-actions"
          service_account: 'github-actions@kanade0404.iam.gserviceaccount.com'

      - name: Setup gcloud sdk
        uses: google-github-actions/setup-gcloud@v0.6.0
        with:
          project_id: ${{ secrets.GOOGLE_PROJECT_ID_NUMBER }}
          export_default_credentials: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -recursive -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: tflint
        uses: reviewdog/action-tflint@v1.17.0
        id: lint
        with:
          github_token: ${{ secrets.github_token }}

      - name: Terraform Plan
        id: plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v6.0.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Lint üëì\`${{ steps.lint.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1

      - name: Terraform Apply
        if: github.ref == 'refs/heads/master' && github.event_name == 'push'
        run: terraform apply -auto-approve